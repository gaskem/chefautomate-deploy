{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
      "vmName": {
        "type": "string",
        "metadata": {
          "description": "The name for the VM's."
        }
      },
      "adminUsername": {
        "type": "string",
        "metadata": {
          "description": "Username for the Virtual Machine."
        }
      },
      "windowsOSVersion": {
        "type": "string",
        "defaultValue": "2016-Datacenter",
        "metadata": {
          "description": "The Windows version for the VM. This will pick a fully patched image of this given Windows version. Allowed values: 2008-R2-SP1, 2012-Datacenter, 2012-R2-Datacenter."
        }
      },
      "DataDiskSizes": {
        "type": "array",
        "defaultValue": [],
        "metadata": {
          "description": "The number of dataDisks to be returned in the output array."
        }
      },
      "privateIPAddress": {
          "type": "string"
      },
      "subnetName": {
        "type": "string",
        "metadata": {
          "description": "The name for the VM's Subnet."
        }
      },
      "runlist": {
        "type": "string",
        "metadata": {
          "description": "Optional Run List to Execute"
        }
      },
      "existingVirtualNetworkName": {
        "type": "string",
        "metadata": {
          "description": "The name for the VM's VNET."
        }
      },
      "existingNetworkSG": {
          "type": "string",
          "metadata": {
            "description": "The name of Network Security Group to use"
          }
        },
      "domainToJoin":
      {
        "type": "string",
        "metadata":
        {
          "description": "The domain user alias to use when joining the machine to the specified domain"
        }
      },
      "ouPath":
      {
        "type": "string",
        "metadata":
        {
          "description": "Specifies an organizational unit (OU) for the domain account. Enter the full distinguished name of the OU in quotation marks. Example: 'OU=testOU; DC=domain; DC=Domain; DC=com"
        }
      },
      "domainUsername":
      {
        "type": "string",      
        "minLength": 1,
        "metadata":
        {
          "description": "The domain user alias to use when joining the machine to the specified domain"
        }
      },
      "domainPassword":
      {
        "type": "securestring",
        "minLength": 1,
        "metadata":
        {
          "description": "The password of the domain user to use when joining the machine to the specified domain"
        }
      },
      "domainJoinOptions":
      {
        "type": "int",
        "defaultValue": 3,
        "metadata":
        {
          "description": "Set of bit flags that define the join options. Default value of 3 is a combination of NETSETUP_JOIN_DOMAIN (0x00000001) & NETSETUP_ACCT_CREATE (0x00000002) i.e. will join the domain and create the account on the domain. For more information see https://msdn.microsoft.com/en-us/library/aa392154(v=vs.85).aspx"
        }
      },
      "backupVaultName": {
        "type": "string"
      },
      "backupFabricName": {
        "type": "string"
      },
      "backupVaultRGName": {
        "type": "string"
      },
      "backupVaultRGIsNew": {
        "type": "bool",
        "defaultValue": false,
        "metadata": {
          "description": "Set to create new Backup VAult or use Existing"
        }
      },
      "backupPolicyName": {
        "type": "string"
      },
      "availabilitySetName": {
        "type": "string"
      },
      "diagnosticsStorageAccountName": {
        "type": "string"
      },
      "chef_server_url": {
          "type": "string",
          "metadata": {
            "description": "Organization URL for the Chef Server. Example https://ChefServerDnsName.cloudapp.net/organizations/Orgname"
          }
        },
      "validation_client_name": {
          "type": "string",
          "metadata": {
            "description": "Validator key name for the organization. Example : MyOrg-validator"
          }
        },
        "validation_key": {
          "type": "string",
           "metadata": {
            "description": "JSON Escaped Validation Key"
          }
        },
        "validation_key_format": {
          "type": "string",
          "allowedValues": ["plaintext", "base64encoded"],
          "metadata" : {
            "description": "Format in which Validation Key is given. e.g. plaintext, base64encoded"
          }
        },
      "adminPassword": {
        "type": "securestring"
      }
    },
    "variables": {
      "imagePublisher": "MicrosoftWindowsServer",
      "imageOffer": "WindowsServer",
      "nicName": "[concat(parameters('vmName'), '01')]",
      "subnetName": "[parameters('subnetName')]",
      "existingNetworkSG": "[parameters('existingNetworkSG')]",
      "existingVirtualNetworkName": "[parameters('existingVirtualNetworkName')]",
      "vmName": "[parameters('vmName')]",
      "vmSize": "Basic_A1",
      "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('existingVirtualNetworkName'))]",
      "subnetRef": "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]",
      "apiVersion": "2015-06-15",
      "domainJoinOptions": "3",
      "ouPath": "",    
      "keyVaultRef": "/subscriptions/0db10018-0da9-473b-afdb-306000b3a80d/resourceGroups/AzureDeploy/providers/Microsoft.KeyVault/vaults/aztestdomvault",
      "backupItemName": "[concat('vm;iaasvmcontainerv2;AzureDeploy;', parameters('vmName'))]",
      "chef_node_name": "[parameters('vmName')]",
      "vmExtensionName": "ChefExtension"  
    },
    "resources": [
      {
          "apiVersion": "2017-05-10",
          "name": "[concat(parameters('vmName'), '-' , 'BackupIntent')]",
          "type": "Microsoft.Resources/deployments",
          "resourceGroup": "[parameters('backupVaultRGName')]",
          "properties": {
              "mode": "Incremental",
              "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "resources": [
                      {
                          "name": "[concat(parameters('backupVaultName'), '/', parameters('backupFabricName'), '/', variables('backupItemName'))]",
                          "apiVersion": "2017-07-01",
                          "type": "Microsoft.RecoveryServices/vaults/backupFabrics/backupProtectionIntent",
                          "properties": {
                              "friendlyName": "[concat(parameters('vmName'), 'BackupIntent')]",
                              "protectionIntentItemType": "AzureResourceItem",
                              "policyId": "[resourceId(parameters('backupVaultRGName'), 'Microsoft.RecoveryServices/vaults/backupPolicies', parameters('backupVaultName'), parameters('backupPolicyName'))]",
                              "sourceResourceId": "[resourceId('AzureDeploy', 'Microsoft.Compute/virtualMachines', parameters('vmName'))]"
                          }
                      }
                  ]
              }
          },
          "dependsOn": [
              "[resourceId('AzureDeploy', 'Microsoft.Compute/virtualMachines', parameters('vmName'))]"
          ]
      },
  
      {
        "apiVersion": "2015-06-15",
        "type": "Microsoft.Network/networkInterfaces",
        "name": "[variables('nicName')]",
        "location": "[resourceGroup().location]",
        "dependsOn": [
        ],
        "properties": {
          "ipConfigurations": [
            {
              "name": "ipconfig1",
              "properties": {
                "privateIPAllocationMethod": "Static",
                "privateIPAddress": "[parameters('privateIPAddress')]",
                "subnet": {
                  "id": "[variables('subnetRef')]"
                }
              }
            }
          ],
          "enableIPForwarding": false,
          "networkSecurityGroup": {
                  "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('existingNetworkSG'))]"
               }
        }
      },
      {
        "apiVersion": "2016-04-30-preview",
        "type": "Microsoft.Compute/virtualMachines",
        "name": "[variables('vmName')]",
        "location": "[resourceGroup().location]",
        "dependsOn": [
          "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
        ],
        "properties": {
          "hardwareProfile": {
            "vmSize": "[variables('vmSize')]"
          },
          "osProfile": {
            "computerName": "[variables('vmName')]",
            "adminUsername": "[parameters('adminUsername')]",
            "adminPassword": "[parameters('adminPassword')]"
          },
          "storageProfile": {
            "imageReference": {
              "publisher": "[variables('imagePublisher')]",
              "offer": "[variables('imageOffer')]",
              "sku": "[parameters('windowsOSVersion')]",
              "version": "latest"
            },
            "osDisk": {
              "createOption": "FromImage",
              "managedDisk": {
                  "storageAccountType": "Standard_LRS"
              }
            },
            "copy": [
              {
                "name": "dataDisks",
                "count": "[length(parameters('DataDiskSizes'))]",
                "input": {
                  "diskSizeGB": "[parameters('DataDiskSizes')[copyIndex('dataDisks')]]",
                  "lun": "[copyIndex('dataDisks')]",
                  "createOption": "Empty",
                  "managedDisk": {
                    "storageAccountType": "Standard_LRS"
                  }
                }
              }
            ]
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
              }
            ]
          },
          "diagnosticsProfile": {
              "bootDiagnostics": {
                  "enabled": true,
                  "storageUri": "[reference(resourceId('AzureDeploy', 'Microsoft.Storage/storageAccounts', parameters('diagnosticsStorageAccountName')), '2015-06-15').primaryEndpoints['blob']]"
              }
          },
          "availabilitySet": {
              "id": "[resourceId('Microsoft.Compute/availabilitySets', parameters('availabilitySetName'))]"
          }
        }
      },
      {
          "apiVersion": "2016-04-30-preview",
          "type": "Microsoft.Compute/virtualMachines/extensions",
          "name": "[concat(parameters('vmName'),'/joindomain')]",
          "location": "[resourceGroup().location]",
          "dependsOn":
          [
            "[concat('Microsoft.Compute/virtualMachines/', parameters('vmName'))]"
          ],
          "tags":
          {
            "displayName": "JsonADDomainExtension"
          },
          "properties":
          {
            "publisher": "Microsoft.Compute",
            "type": "JsonADDomainExtension",
            "typeHandlerVersion": "1.3",
            "autoUpgradeMinorVersion": true,
            "settings":
            {
              "Name": "[parameters('domainToJoin')]",
              "OUPath": "[parameters('ouPath')]",
              "User": "aztestdom\\azjoinDomain",
              "Restart": "true",
              "Options": "[parameters('domainJoinOptions')]"
            },
            "protectedSettings":
            {
              "Password": "[parameters('domainPassword')]"
            }
          }
        },
        {
          "type": "Microsoft.Compute/virtualMachines/extensions",
          "name": "[concat(variables('vmName'),'/', variables('vmExtensionName'))]",
          "apiVersion": "2015-05-01-preview",
          "location": "[resourceGroup().location]",
          "dependsOn": [
            "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]"
          ],
          "properties": {
              "publisher": "Chef.Bootstrap.WindowsAzure",
              "type": "ChefClient",
              "typeHandlerVersion": "1210.12",
              "settings": {
                "client_rb": "ssl_verify_mode :verify_none\n",
                "bootstrap_options": {
                  "chef_node_name": "[variables('chef_node_name')]",
                  "chef_server_url": "[parameters('chef_server_url')]",
                  "validation_client_name": "[parameters('validation_client_name')]"
                },
                "runlist": "[parameters('runlist')]",
                "validation_key_format": "[parameters('validation_key_format')]"
              },
              "protectedSettings": {
                "validation_key": "[parameters('validation_key')]"
              }
            }
          }
    ]
  }
  