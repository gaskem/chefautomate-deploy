{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {

    "name": {
      "type": "string",
      "metadata": {
        "description": "Hostname for the machine, which will also be the Public FQDN name.  For Windows machines this must be 15 characters or less"
      }
    },
    "azurename": {
      "type": "string",
      "metadata": {
        "description": "Hostname for the machine, which will also be the Public FQDN name.  For Windows machines this must be 15 characters or less"
      }
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "Username to be set on the machine, this is the name to be used for RDP access"
      },
      "defaultValue": "azure"
    },

    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Password to be associated with the specified username"
      }
    },

    "subnetRef": {
      "type": "string",
      "metadata": {
        "description": "Reference to the subnet that the NIC should be connected to"
      }
    },

    "storageAccountName": {
      "type": "string",
      "metadata": {
        "description": "Name of the storage account in which the disks should be created"
      }
    },

    "storageAccountContainerName": {
      "type": "string",
      "metadata": {
        "description": "Name of the container within the storage account into which the disks will be stored"
      },
      "defaultValue": "vhds"
    },

    "vmSize": {
      "type": "string",
      "metadata": {
        "description": "Size of the machine to create"
      },
      "defaultValue": "Standard_D1_v2"
    },

    "imageSku": {
      "type": "string",
      "metadata": {
        "description": "Name SKU to deploy"
      }
    },

    "withNSG": {
      "type": "string",
      "defaultValue": "No"
    },

    "NSGRef": {
      "type": "string",
      "defaultValue": ""
    },

    "chefRepoUrl": {
      "type": "string",
      "metadata": {
        "description": "URL to the Zip file for the repo"
      }
    },

    "chefServerUrl": {
      "type": "string",
      "metadata": {
        "description": "URL to the Chef organisation"
      }
    },

    "chefOrg": {
      "type": "string",
      "metadata": {
        "description": "Chef Organisation"
      }
    },

    "chefUser": {
      "type": "string",
      "metadata": {
        "description": "The configured Chef user"
      }
    },

    "subscriptionPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Used by the PowerShell bootstrap script to set the password for the subscription.  This is so that the workstation::azurecred recipe can configure the SPN correctly"
      },
      "defaultValue": ""
    },

    "subscriptionUsername": {
      "type": "string",
      "metadata": {
        "description": "Username to use to login to the subscription"
      },
      "defaultValue": ""
    },

    "spnDetails": {
      "type": "secureObject",
      "metadata": {
        "description": "Object containing the SPN information that should be used for Test Kitchen"
      },
      "defaultValue": {
        "clientId": "",
        "clientSecret": "",
        "tenantId": ""
      }
    },

    "autoShutdown": {
      "type": "object",
      "metadata": {
        "description": "Object specifying if Auto shutdown should be configured"
      },
      "defaultValue": {

        "shutdown": {
          "status": "Disabled",
          "timezone": "UTC",
          "time": "1900"
        }
      }
    },

    "automateServerFQDN": {
      "type": "string"
    },

    "automateServerUrl": {
      "type": "string"
    },

    "workstationAttributes": {
      "type": "object",
      "metadata": {
        "description": "Information for the workstation such as the version of ChefDK to install"
      }
    }
  },

  "variables": {

    "location": "[resourceGroup().location]",

    "name": {
      "vm": "[parameters('azurename')]",
      "nic": "[concat(parameters('azurename'), '-NIC')]",
      "publicIPAddress": "[concat(parameters('azurename'), '-PublicIP')]",
      "dns": "[parameters('name')]",
      "computer": "[parameters('name')]",
      "extension": {
        "chef": "[concat(parameters('name'), '-ChefExt')]"
      },
      "sa": {
        "name": "[parameters('storageAccountName')]",
        "containerName": "[parameters('storageAccountContainerName')]"
      }
    },

    "ref": {
      "subnet": "[parameters('subnetRef')]",
      "nsg":  "[parameters('NSGRef')]"
    },

    "type": {
      "publicIPAddress": "Dynamic"
    },

    "vmSize": "[parameters('vmSize')]",

    "image": {
      "sku": "[parameters('imageSku')]"
    },

    "urls": {
      "publicIPAddress": "[uri(deployment().properties.templateLink.uri, '../public-ipaddress/public-ipaddress.json')]",
      "networkInterface": "[uri(deployment().properties.templateLink.uri, '../network-interface/network-interface-publicip.json')]",
      "autoShutdown": "[uri(deployment().properties.templateLink.uri, '../auto-shutdown/auto-shutdown.json')]",
      "virtualMachine": "[uri(deployment().properties.templateLink.uri, concat('../virtual-machine/virtual-machine-windows.json'))]",
        "configurationScript": "[uri(deployment().properties.templateLink.uri, concat('../scripts/windows-workstation.ps1'))]"
    },

    "apiVersions": {
      "deployments": "2016-02-01",
      "networkInterfaces": "2015-06-15"
    },

    "subscription": {
      "password": "[parameters('subscriptionPassword')]",
      "id": "[subscription().subscriptionId]",
      "username": "[parameters('subscriptionUsername')]"
    },

    "workstation": "[parameters('workstationAttributes')]"    
  },

  "resources": [

    {
      "type": "Microsoft.Resources/deployments",
      "name": "[concat(variables('name').publicIPAddress, '-Deployment')]",
      "apiVersion": "[variables('apiVersions').deployments]",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('urls').publicIPAddress]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
            "location": {
              "value": "[variables('location')]"
            },
            "publicIPAddressName": {
              "value": "[variables('name').publicIPAddress]"
            },
            "publicIPAddressType": {
              "value": "[variables('type').publicIPAddress]"
            },
            "dnsLabelPrefix": {
              "value": "[variables('name').dns]"
            }         
        }
      }
    },

    {
      "type": "Microsoft.Resources/deployments",
      "name": "[concat(variables('name').nic, '-Deployment')]",
      "apiVersion": "[variables('apiVersions').deployments]",
      "dependsOn": [
        "[concat('Microsoft.Resources/deployments/', variables('name').publicIPAddress, '-Deployment')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('urls').networkInterface]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
            "nicName": {
              "value": "[variables('name').nic]"
            },
            "publicIPAddressRef": {
              "value": "[reference(concat(variables('name').publicIPAddress, '-Deployment')).outputs.publicIpId.value]"
            },
            "subnetRef": {
              "value": "[variables('ref').subnet]"
            },
            "withNSG": {
              "value": "[parameters('withNSG')]"
            },
            "NSGRef": {
              "value": "[parameters('NSGRef')]"
            }
        }
      }
    },

    {
      "type": "Microsoft.Resources/deployments",
      "name": "[concat(variables('name').vm, '-Deployment')]",
      "apiVersion": "[variables('apiVersions').deployments]",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('urls').virtualMachine]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
            "vmName": {
              "value": "[variables('name').vm]"
            },
            "azName": {
              "value": "[parameters('azurename')]"
            },
            "computerName": {
              "value": "[variables('name').computer]"
            },
            "vmSize": {
              "value": "[variables('vmSize')]"
            },
            "adminUsername": {
              "value": "[parameters('adminUsername')]"
            },
            "adminPassword": {
              "value": "[parameters('adminPassword')]"
            },
            "storageAccountName": {
              "value": "[variables('name').sa.name]"
            },
            "storageAccountContainerName": {
              "value": "[variables('name').sa.containerName]"
            },
            "imageSku": {
              "value": "[variables('image').sku]"
            },
            "nicRef": {
              "value": "[reference(concat(variables('name').nic, '-Deployment')).outputs.ref.value]"
            }
        }
      }
    },

    {
      "type": "Microsoft.Resources/deployments",
      "name": "[concat(variables('name').vm, '-AutoShutdown-Deployment')]",
      "apiVersion": "[variables('apiVersions').deployments]",
      "dependsOn": [
        "[concat('Microsoft.Resources/deployments/', variables('name').vm, '-Deployment')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('urls').autoShutdown]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "vmName": {
            "value": "[variables('name').vm]"
          },
          "autoShutdown": {
            "value": "[parameters('autoShutdown')]"
          }
        }
      }
    },


    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('name').vm, '/InstallChefDK')]",
      "apiVersion": "2015-05-01-preview",
      "location": "[variables('location')]",
      "dependsOn": [
          "[concat('Microsoft.Resources/deployments/', variables('name').vm, '-Deployment')]"
      ],
      "properties": {
          "publisher": "Microsoft.Compute",
          "type": "CustomScriptExtension",
          "typeHandlerVersion": "1.7",
          "autoUpgradeMinorVersion":true,
          "settings": {
              "fileUris": [
                  "[variables('urls').configurationScript]"
              ],
              "commandToExecute": "[concat('powershell.exe -ExecutionPolicy Unrestricted -File .\\windows-workstation.ps1 -operation \"chefdk,chefrepo,chefclient\" -chefdk_version ', variables('workstation').chefdkversion, ' -chef_repo_url \"', parameters('chefRepoUrl'), '\" -chef_org \"', parameters('chefOrg'), '\" -chef_server_url \"', parameters('chefServerUrl'), '\" -chef_user \"', parameters('chefUser'), '\" -windows_password \"', parameters('adminPassword'), '\" -subscriptionId \"', variables('subscription').id, '\" -subscriptionPassword \"', variables('subscription').password, '\" -subscriptionUsername \"', variables('subscription').username, '\" -azurelocation \"', variables('location'), '\" -clientId \"', parameters('spnDetails').clientId, '\" -clientSecret \"', parameters('spnDetails').clientSecret, '\" -tenantId \"', parameters('spnDetails').tenantId, '\" -automateServerFQDN \"', parameters('automateServerFQDN'), '\" -automateServerUrl \"', parameters('automateServerUrl'), '\" > windows-workstation.log')]"
          }
      }
    }

  ],

  "outputs": {
    "fqdn": {
      "type": "string",
      "value": "[reference(concat(variables('name').publicIPAddress, '-Deployment')).outputs.fqdn.value]"
    }
  }
}